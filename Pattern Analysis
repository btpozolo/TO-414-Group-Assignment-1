```{r}
#By Month
trainingdata$month <- month(as.POSIXct(trainingdata$starttime, format="%m/%d/%Y %H:%M:%S"))
trainingdata$month <- factor(trainingdata$month)

Jan <- nrow(subset(trainingdata, trainingdata$month == 1))
Feb <- nrow(subset(trainingdata, trainingdata$month == 2))
Mar <- nrow(subset(trainingdata, trainingdata$month == 3))
Apr <- nrow(subset(trainingdata, trainingdata$month == 4))
May <- nrow(subset(trainingdata, trainingdata$month == 5))
Jun <- nrow(subset(trainingdata, trainingdata$month == 6))
Jul <- nrow(subset(trainingdata, trainingdata$month == 7))
Aug <- nrow(subset(trainingdata, trainingdata$month == 8))
Sep <- nrow(subset(trainingdata, trainingdata$month == 9))
Oct <- nrow(subset(trainingdata, trainingdata$month == 10))
Nov <- nrow(subset(trainingdata, trainingdata$month == 11))
Dec <- nrow(subset(trainingdata, trainingdata$month == 12))

monthly <- c(Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec)

barplot(monthly, xlab= "Month", ylab = "Volume", main="Volume of Usage by Month",  names.arg=c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))

```

```{r}
#By weekday 
trainingdata$weekday<- wday(as.POSIXct(trainingdata$starttime, format="%m/%d/%Y %H:%M:%S"), label=TRUE, abbr = TRUE)

Sun <- nrow(subset(trainingdata, trainingdata$weekday == "Sun"))
Mon <- nrow(subset(trainingdata, trainingdata$weekday == "Mon"))
Tue <- nrow(subset(trainingdata, trainingdata$weekday == "Tues"))
Wed <- nrow(subset(trainingdata, trainingdata$weekday == "Wed"))
Thr <- nrow(subset(trainingdata, trainingdata$weekday == "Thurs"))
Fri <- nrow(subset(trainingdata, trainingdata$weekday == "Fri"))
Sat <- nrow(subset(trainingdata, trainingdata$weekday == "Sat"))

weekly <- c(Sun, Mon, Tue, Wed, Thr, Fri, Sat)
barplot(weekly, xlab= "Day Of Week", ylab = "Volume", main="Volume of Usage by Day of Week",  names.arg=c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ))

```

```{r}
#Time of Day
trainingdata$hour<- hour(as.POSIXct(trainingdata$starttime, format="%m/%d/%Y %H:%M:%S"))

a <- nrow(subset(trainingdata, trainingdata$hour == 1))                       
b <- nrow(subset(trainingdata, trainingdata$hour == 2))                       
c <- nrow(subset(trainingdata, trainingdata$hour == 3))                       
d <- nrow(subset(trainingdata, trainingdata$hour == 4))                       
e <- nrow(subset(trainingdata, trainingdata$hour == 5))                       
f <- nrow(subset(trainingdata, trainingdata$hour == 6))                       
g <- nrow(subset(trainingdata, trainingdata$hour == 7))                       
h <- nrow(subset(trainingdata, trainingdata$hour == 8))                       
i <- nrow(subset(trainingdata, trainingdata$hour == 9))                       
j <- nrow(subset(trainingdata, trainingdata$hour == 10))                      
k <- nrow(subset(trainingdata, trainingdata$hour == 11))                      
l <- nrow(subset(trainingdata, trainingdata$hour == 12))                      
m <- nrow(subset(trainingdata, trainingdata$hour == 13))                      
n <- nrow(subset(trainingdata, trainingdata$hour == 14)) 
o <- nrow(subset(trainingdata, trainingdata$hour == 15))                      
p <- nrow(subset(trainingdata, trainingdata$hour == 16))                      
q <- nrow(subset(trainingdata, trainingdata$hour == 17))                    
r <- nrow(subset(trainingdata, trainingdata$hour == 18))                    
s <- nrow(subset(trainingdata, trainingdata$hour == 19))                    
t <- nrow(subset(trainingdata, trainingdata$hour == 20))                  
u <- nrow(subset(trainingdata, trainingdata$hour == 21))                    
v <- nrow(subset(trainingdata, trainingdata$hour == 22))                    
w <- nrow(subset(trainingdata, trainingdata$hour == 23))                    
x <- nrow(subset(trainingdata, trainingdata$hour == 24))                      

hourly <- c(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x)

barplot(hourly, xlab= "Hour", ylab = "Volume", main="Volume of Usage per Hour",  names.arg=c("1", "2", "3", "4", "5","6","7","8","9","10","11","12","13","14","15","16", "17","18","19", "20", "21", "22", "23", "24"), las =2)

```

```{r}
#Traffic by station
traffic <- select(trainingdata, start.station.id, start.station.name, start.station.latitude, end.station.id, end.station.name, end.station.latitude, end.station.longitude, bikeid, weekday)

traffic$start.station.id <- factor(traffic$start.station.id)
traffic$end.station.id <- factor(traffic$end.station.id)

departing <- ddply(traffic, .(start.station.id), "nrow")
arriving <- ddply(traffic, .(end.station.id), "nrow")

names(departing)[2] <- "Departures"
names(arriving)[2] <- "Arrivals"

names(departing)[1] <- "Station_ID"
names(arriving)[1] <- "Station_ID"

asymmetry <- merge(departing, arriving, by.x="Station_ID", by.y= "Station_ID")
asymmetry <- transform(asymmetry, netuse = asymmetry$Arrivals - asymmetry$Departure)

m1 <- asymmetry %>%
  select(Station_ID, netuse) %>%
  arrange(desc(netuse))

m2 <- m1[1:10,]

barplot(m2$netuse,
        main = "Net Use in 2016",
        xlab = "Station_ID",
        ylab = "Net Use",
        names.arg =c("435", "324", "491", "337", "492", "380", "477", "427", "465", "173")
)


```


```{r}
#Traffic by station per day)
trafficw <- subset(traffic, weekday %in% c("Mon", "Tues", "Wed", "Thurs", "Fri"))
trafficwe <- subset(traffic, weekday %in% c("Sat", "Sun"))
                    
departingw <- ddply(trafficw, .(start.station.id), "nrow")
arrivingw <- ddply(trafficw, .(end.station.id), "nrow")

departingwe <- ddply(trafficwe, .(start.station.id), "nrow")
arrivingwe <- ddply(trafficwe, .(end.station.id), "nrow")

names(departingw)[2] <- "Departures"
names(arrivingw)[2] <- "Arrivals"

names(departingw)[1] <- "Station_ID"
names(arrivingw)[1] <- "Station_ID"

names(departingwe)[2] <- "Departures"
names(arrivingwe)[2] <- "Arrivals"

names(departingwe)[1] <- "Station_ID"
names(arrivingwe)[1] <- "Station_ID"

asymmetryw <- merge(departingw, arrivingw, by.x="Station_ID", by.y= "Station_ID")
asymmetryw <- transform(asymmetryw, netusew = asymmetryw$Arrivals - asymmetryw$Departure)

asymmetrywe <- merge(departingwe, arrivingwe, by.x="Station_ID", by.y= "Station_ID")
asymmetrywe <- transform(asymmetrywe, netusewe = asymmetrywe$Arrivals - asymmetrywe$Departure)

mw <- asymmetryw %>%
  select(Station_ID, netusew) %>%
  arrange(desc(netusew))

mw <- mw[1:10,]

mw

barplot(mw$netusew,
        main = "Net Use during Week Day",
        xlab = "Station_ID",
        ylab = "Net Use",
        names.arg =c("477", "435", "492", "465", "427", "491", "324", "432", "456", "505")
)


```

```{r}

mwe <- asymmetrywe %>%
  select(Station_ID, netusewe) %>%
  arrange(desc(netusewe))

mwe <- mwe[1:10,]

mwe

barplot(mwe$netusewe,
        main = "Net Use during Weekend",
        xlab = "Station_ID",
        ylab = "Net Use",
        names.arg =c("466", "161", "168", "445", "368", "467", "329", "212", "461", "259")
)
```



```{r}
#Overall Trip Duration per Station

traveltime <- ddply(trainingdata, ~ start.station.id, summarize, travel_duration = mean(tripduration))

traveltime %>%
  select(start.station.id, travel_duration) %>%
  arrange(desc(travel_duration))

tt <- traveltime[1:10,]

barplot(tt$travel_duration,
        main = "Travel Duration by Top Ten Stations",
        xlab = "Station_ID",
        ylab = "Average Travel Duration",
        names.arg =c("72", "79", "82", "445", "368", "467", "329", "212", "461", "259")
)

```











